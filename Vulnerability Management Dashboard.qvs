Section: Version History

//////////////////////////////////////////////////

/*

--------------------------------Version History------------------------------------------

*/

SET vVersion = 1.4;

/*

31.10.2023 - Updated by Akash Pohare

---- > Added logic to compare and find the newly detected vulnerabilities in the 
       current report
---- > Added the comments to describe the logic behind the code

25.11.2023 - Updated by Akash Pohare

---- > Updated logic(created a key by concatenating Vulnerability and DNS Name) to
       compare and find the newly detected vulnerabilities in the current report as
       were not able to distinguish same vulnerability from previous and current month.
       "Plugin Name"&''&"DNS Name"  - added as Key and used in mapping table.
---- > Also, added "Vulnerability_Type" column in the "Vulnerability Status" table in Report
       sheet.
      
---- > Changed the "uniquerecord" from RowNo() to "AutoNumber("Plugin Name"&''&"DNS Name"&''&ReportMonth)"
	   to fix the issue of missing "Status" values when few reports are excluded from
       the loading.
*/

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////

Section: Main

////////////////////////////////////////////////////////////////////////////////////////////////

SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;-$#,##0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='D.M.YYYY';
SET TimestampFormat='D.M.YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


LET vReloadDate = Date(Today(),'YYYY-MM-DD');
SET vFilePath = 'lib://Custom_User_Access_Details_ODBC/Vulnerability';


TRACE 'App Reload time = $(vReloadDate)';
TRACE 'Files Path = $(vFilePath)';


/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////


Section: Data

///////////////////////////////////////////////////////////////////////////////////////////////////

/*
Categorize the servers based on the environment or tool type

*/

MapServerToEnvironment:

 MAPPING LOAD
    
    UPPER("Host Name")                            AS   "DNS Name",
     Environment
FROM [lib://Custom_User_Access_Details_ODBC/Vulnerability/ServerMapping.xlsx]
(ooxml, embedded labels, table is Sheet1);


/*
Maintain the file configurations that needs to be loaded for analysis. Check Help sheet
for more details.

*/

FilesToLoad:

LOAD
    "FileName",
    Date("Date")                    AS   Date,
    "Flag"                            
FROM [lib://Custom_User_Access_Details_ODBC/Vulnerability/ReportsToLoad.xlsx]
(ooxml, embedded labels, table is ReportsToLoad)
WHERE "Flag"='1';


/*
Get the maximun and maximum -1 date and store in the variable. These variables are used in front end to comapre the current
and previous month vulnerability counts. Also, same variable are used to find the new
vulnerabilities in the current report by mapping vulnerabilities from previous report to
old.

*/

ReportAvailableMaxDate:

LOAD 

    DATE(MAX(Date))                  AS   ReportAvailableMaxDate,
    DATE(AddMonths(DATE(MAX(Date)) ,-1))
                                     AS   PrevReportAvailableMaxDate
RESIDENT FilesToLoad;    

Let vReportAvailableMaxDate = PEEK('ReportAvailableMaxDate',-1,'ReportAvailableMaxDate');
Let vPrevReportAvailableMaxDate = PEEK('PrevReportAvailableMaxDate',-1,'ReportAvailableMaxDate');

TRACE 'Report Available Max Date = $(vReportAvailableMaxDate)';
TRACE 'Previous Report Available Max Date = $(vPrevReportAvailableMaxDate)';


LET vRecordNumber = NoOfRows('FilesToLoad');
TRACE 'Number of Records = $(vRecordNumber)';


/*
Create a dummy table so that dynamic concatanation can be done when files are loaded in
loop.

*/
VulnerabilityReportTemp:

LOAD * INLINE 
[
Dummy

];


/*
Use FOR loop to load the files dynamically mentioned in the "FilesToLoad" table.
In the loop, dates corresponding to monthly reports are fetched and used in front end
and in below script.

*/

FOR RecordNumber=1 TO NoOfRows('FilesToLoad')

LET vFileToLoadName = PEEK('FileName',RecordNumber-1,'FilesToLoad');
TRACE 'File Name to Load = $(vFileToLoadName)';

LET vReportMonth =  SubField('$(vFileToLoadName)','_',-2) &'_'&SubField('$(vFileToLoadName)','_',-1) ;
TRACE 'Report Generation Month = $(vReportMonth)';

LET vDate = PEEK('Date',RecordNumber-1,'FilesToLoad');
TRACE 'Date from File = $(vDate)';

CONCATENATE(VulnerabilityReportTemp)

/*
Below, loading all reports excluding the current report and previous report because
we want to compare only current and previous months report for finding new vulnerabilities
in current report and want to load them later.

*/

LOAD
    "BS Code",
    "BS Name",
    "APP ENVIRONMENT",
    "Age (Days)",
    "Age Group",
    PR,
    "PR Severity",
    "Vulnerability Priority Rating",
    HostName,
    "SDM",
    "Server Environment",
    "Server Status",
    "Patching Type",
    Responsible,
    Upper("DNS Name")                            AS   "DNS Name" ,
    Plugin                                       AS  "Plugin ID",
    "Plugin Name",
    Exploit?,
    "First Discovered",
    "Last Observed",
    Solution,
    Protocol,
    Port,
    "Plugin Output",
    Description,
    '$(vReportMonth)'                            AS   ReportMonth,
    '$(vDate)'                                   AS   Date
    
FROM [lib://Custom_User_Access_Details_ODBC/Vulnerability/$(vFileToLoadName).xlsx]
(ooxml, embedded labels, table is '$(vReportMonth)')
WHERE  WildMatch(SDM,'ISSAC, TOM (M290838)') and
'$(vDate)'<'$(vPrevReportAvailableMaxDate)';

/*
Below, loading only previous and current report and creating a mapping table from
previous report so that new field "Vulnerability_Type" can be used for comparing with
current report.

*/

IF  '$(vDate)'>='$(vPrevReportAvailableMaxDate)'  THEN

OldNewVulnerabilityMapping:

MAPPING LOAD

            "Plugin Name"&''&"DNS Name"  AS   "Key",
            'Old'                        AS   "Vulnerability_Type"
FROM [lib://Custom_User_Access_Details_ODBC/Vulnerability/$(vFileToLoadName).xlsx]
(ooxml, embedded labels, table is '$(vReportMonth)')
WHERE  WildMatch(SDM,'ISSAC, TOM (M290838)') and
'$(vDate)'='$(vPrevReportAvailableMaxDate)';


CONCATENATE(VulnerabilityReportTemp)

LOAD
    "BS Code",
    "BS Name",
    "APP ENVIRONMENT",
    "Age (Days)",
    "Age Group",
    PR,
    "PR Severity",
    "Vulnerability Priority Rating",
    HostName,
    "SDM",
    "Server Environment",
    "Server Status",
    "Patching Type",
    Responsible,
    Upper("DNS Name")                            AS   "DNS Name" ,
    Plugin                                       AS  "Plugin ID",
    "Plugin Name",
    Exploit?,
    "First Discovered",
    "Last Observed",
    Solution,
    Protocol,
    Port,
    "Plugin Output",
    Description,
    '$(vReportMonth)'                            AS   ReportMonth,
    '$(vDate)'                                   AS   Date,
    APPLYMAP('OldNewVulnerabilityMapping',"Plugin Name"&''&"DNS Name",'New')             
                                                 AS   Vulnerability_Type
    
FROM [lib://Custom_User_Access_Details_ODBC/Vulnerability/$(vFileToLoadName).xlsx]
(ooxml, embedded labels, table is '$(vReportMonth)')
WHERE  WildMatch(SDM,'ISSAC, TOM (M290838)')
;


END IF
NEXT

/*
Create a final table doing resident and add new field "uniquerecord" to use it for
writing comments using Write! edit table.

*/


VulnerabilityReport:

LOAD 

    *,
    MONTH(Date)                                   AS   Month,
    APPLYMAP('MapServerToEnvironment',"DNS Name",'New Server in List')             
                                                  AS   Environment,
    //RowNo()                                       AS uniquerecord
    AutoNumber("Plugin Name"&''&"DNS Name"&''&ReportMonth)    
    											  AS uniquerecord

RESIDENT VulnerabilityReportTemp;



DROP TABLE ReportAvailableMaxDate;
DROP TABLE FilesToLoad;
DROP Field Dummy;
DROP TABLE VulnerabilityReportTemp;



/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////


Section: List Write Files & Load

////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
list all the files generated by Write!

*/
TRACE 'List all the files generated by Write!';

/*
Create a dummy table so that dynamic concatanation can be done when files are loaded in
loop.

*/

FileList:

LOAD * INLINE 
[
FilePath,FileTime,FileName

];


SUB FolderConnection (Vulnerability_Write_CSV) 

FOR Each Ext in 'csv' 
 FOR Each File in filelist (Vulnerability_Write_CSV&'/*.'&Ext) 
 
 CONCATENATE(FileList)
 LOAD 
      '$(File)'                           AS     FilePath,
       FileTime( '$(File)' )              AS     FileTime,
       SubField(SubField('$(File)','.',-2),'/',-1)
                                          AS     FileName

       
      AutoGenerate 1
      WHERE WildMatch(SubField(SubField('$(File)','.',-2),'/',-1),'*Vulnerability_Write_CSV_full_*'); 
      
 NEXT File
NEXT Ext


ENDSUB
 
Call FolderConnection('lib://Vulnerability_Write_CSV') ;

TRACE 'Files Listing is completed';


//--------------------------------------------------------------------------------
TRACE 'Load Write! Comments';


LET vRecordNumberWriteFiles = NoOfRows('FileList');
TRACE 'Number of Records = $(vRecordNumberWriteFiles)';

Vulnerability_Comments_Write:

LOAD * INLINE 
[
uniquerecord,Comments,Status,updated_at

];

IF('$(vRecordNumberWriteFiles)') <= 0 THEN

CONCATENATE(Vulnerability_Comments_Write)

LOAD * INLINE 
[
uniquerecord,Comments,Status,updated_at

];

ELSE

FOR vRecordNumberWriteFiles=1 TO NoOfRows('FileList')

LET vFileToLoadNameWrite = PEEK('FileName',vRecordNumberWriteFiles-1,'FileList');
TRACE 'File Name to Load = $(vFileToLoadNameWrite)';


//Vulnerability_Comments_Write:

CONCATENATE(Vulnerability_Comments_Write)

LOAD
    uniquerecord,
    Comments,
    Status,

    updated_at,
    NUM(updated_at)                 AS  LatestCommentVersion
FROM [lib://Vulnerability_Write_CSV/$(vFileToLoadNameWrite).csv]
(txt, codepage is 28591, embedded labels, delimiter is ',', msq);
//WHERE Delete <> 'Delete';

NEXT

END IF

STORE Vulnerability_Comments_Write INTO lib://Custom_User_Access_Details_ODBC/Vulnerability/Vulnerability_Comments_Write.qvd(qvd);

DROP TABLE FileList;

INNER JOIN(Vulnerability_Comments_Write)


LOAD 

Max(updated_at)        AS    LatestCommentVersion,
uniquerecord


RESIDENT Vulnerability_Comments_Write
GROUP BY uniquerecord;



// ----------------------------------------------------------------------------
Exit Script;



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////